target_column_name = colnames(df)[where_is_pattern]
simple_column_name = stringr::str_split(target_column_name, "''/")
simple_column_name
simple_column_name = stringr::str_split(target_column_name, "''/")[[1]]
simple_column_name
simple_column_name = stringr::str_split(target_column_name, "\\.")[[1]]
simple_column_name
colnames(df)
stringr::str_detect(colnames(df), "EA\\.")
where_is_pattern <- stringr::str_detect(colnames(df), "EA\\.")
target_column_name = colnames(df)[where_is_pattern]
stringr::str_replace(target_column_name, "EA\\.", "")
target_column_name = colnames(df)[where_is_pattern]
target_column_name
stringr::str_replace(target_column_name, "EA\\.", "")
simple_column_name = stringr::str_replace(target_column_name, "EA\\.", "")
where_is_pattern
?mutate_at
mutate_at(df, matches("EA\\."))
rename_at(df, matches("EA\\."), simple_column_name)
rename_at(df, matches("EA\\."), function(x) simple_column_name)
df
simple_column_name
target_column_name
colnames(df)
stringr::str_replace(colnames(df), "EA\\.", "")
colnames(df) = stringr::str_replace(colnames(df), "EA\\.", "")
colnames(df)
simplify_xts_name <- function(df, pattern) {
colnames(df) = stringr::str_replace(colnames(df), "EA\\.", "")
df
}
rm(simplify_xts_name())
rm(simplify_xts_name)
remove_pattern_from_colnames <- function(df, pattern) {
colnames(df) = stringr::str_replace(colnames(df), pattern, "")
df
}
gaming_stocks$closing[[1]]
remove_pattern_from_colnames(gaming_stocks$closing[[1]], pattern = "\\.")
remove_pattern_from_colnames(gaming_stocks$closing[[1]], pattern = "EA\\.")
remove_pattern_from_colnames(gaming_stocks$closing[[1]], pattern = paste0("EA", "\\."))
remove_pattern_from_colnames(gaming_stocks$closing[[1]], pattern = paste0("EA", "\\."))
gaming_stocks <-
tibble(tickers = gaming_stock_tickers) %>%
add_stocks(tickers, analysis_dates$start, analysis_dates$end)
gaming_stocks_raw <-
tibble(tickers = gaming_stock_tickers) %>%
add_stocks(tickers, analysis_dates$start, analysis_dates$end)
casino_stocks_raw <-
tibble(tickers = gaming_and_casino_stock_tickers) %>%
add_stocks(tickers, analysis_dates$start, analysis_dates$end)
rm(df, foo)
gaming_stocks_raw %>%
mutate(closing = map2(stocks, tickers, function(x, y, z) extract_xts(x, y, z), "Close")) %>%
mutate(closing = map2(closing, tickers, function(x, y) remove_pattern_from_colnames(x, paste0(y, "\\."))))
gaming_stocks <-
gaming_stocks_raw %>%
mutate(closing = map2(stocks, tickers, function(x, y, z) extract_xts(x, y, z), "Close")) %>%
mutate(closing = map2(closing, tickers, function(x, y) remove_pattern_from_colnames(x, paste0(y, "\\."))))
gaming_stocks$closing[[1]]
gaming_stocks <-
gaming_stocks_raw %>%
mutate(closing = map2(stocks, tickers, function(stk, tck, var_name) extract_xts(stk, tck, var_name), "Close")) %>%
mutate(closing = map2(closing, tickers, function(cls, tck) remove_pattern_from_colnames(cls, paste0(tck, "\\."))))
map2(gaming_stocks$closing, gaming_stocks$tickers, function(x, y) qplot(stock_date,  data = x, geom = "line", main = y))
map2(gaming_stocks$closing, gaming_stocks$tickers, function(x, y) qplot(stock_date, Close,  data = x, geom = "line", main = y))
extract_xts <- function(xts_obj, ticker_name, metric) {
xts_column = paste0(ticker_name, ".", metric)
result <-
xts_obj[ , xts_column] %>%
as.data.frame() %>%
tibble::rownames_to_column(var = "stock_date") %>%
as_tibble() %>%
mutate(stock_date = as.Date(stock_date))
result
}
remove_pattern_from_colnames <- function(df, pattern) {
colnames(df) = stringr::str_replace(colnames(df), pattern, "")
df
}
gaming_stocks_raw %>%
mutate(closing = map2(stocks, tickers, function(stk, tck, var_name) extract_xts(stk, tck, var_name), "Close")) %>%
mutate(closing = map2(closing, tickers, function(cls, tck) remove_pattern_from_colnames(cls, paste0(tck, "\\."))))
gaming_stocks %>%
mutate(closing_normalised = map(closing, function(df) df$Close / max(df$Close)))
gaming_stocks %>%
mutate(closing_normalised = map(closing, function(df) df$Close / max(df$Close))) %>% pull(closing_normalised)
?core
?cor
gaming_stocks_normalised <-
gaming_stocks %>%
mutate(closing_normalised = map(closing, function(df) df$Close / max(df$Close))) %>%
pull(closing_normalised)
gaming_stocks_normalised
gaming_stocks_normalised <-
gaming_stocks %>%
mutate(closing_normalised = map(closing, function(df) df$Close / max(df$Close)))
gaming_stocks_normalised
cor(gaming_stocks_normalised$closing_normalised[[1]],
(gaming_stocks_normalised$closing_normalised[[2]])
cor(gaming_stocks_normalised$closing_normalised[[1]],
gaming_stocks_normalised$closing_normalised[[2]])
gaming_stocks_normalised$closing_normalised
gaming_stocks %>%
mutate(closing_normalised = map(closing, function(df) { df$Close <- df$Close / max(df$Close) ; df })) %>%
pull(closing_normalised)
gaming_stocks_normalised <-
gaming_stocks %>%
mutate(closing_normalised = map(closing, function(df) { df$Close <- df$Close / max(df$Close) ; df })) %>%
pull(closing_normalised)
gaming_stocks_normalised$closing_normalised[[1]]$Close
gaming_stocks_normalised$closing_normalised[[1]]
gaming_stocks_normalised
gaming_stocks %>%
mutate(closing_normalised = map(closing, function(df) { df$Close <- df$Close / max(df$Close) ; df })) %>%
pull(closing_normalised)
gaming_stocks_normalised <-
gaming_stocks %>%
mutate(closing_normalised = map(closing, function(df) { df$Close <- df$Close / max(df$Close) ; df }))
gaming_stocks_normalised$closing_normalised
?reduce
1:3 %>% reduce(`+`)
by = "Close"
df_list = gaming_stocks_normalised$closing_normalised
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(dplyr)
library(ggplot2)
library(purrr)
library(quantmod)
# Chunk 3: functions
add_stocks <- function(df, ticker_var, start_date, end_date, data_source = "yahoo") {
ticker_q = dplyr::enquo(ticker_var)
mutate(df,
stocks = map(!! ticker_q,
function(x, y, z) getSymbols(x, src = data_source,
from = y, to = z,
auto.assign = FALSE),
start_date, end_date))
}
extract_xts <- function(xts_obj, ticker_name, metric) {
xts_column = paste0(ticker_name, ".", metric)
result <-
xts_obj[ , xts_column] %>%
as.data.frame() %>%
tibble::rownames_to_column(var = "stock_date") %>%
as_tibble() %>%
mutate(stock_date = as.Date(stock_date))
result
}
remove_pattern_from_colnames <- function(df, pattern) {
colnames(df) = stringr::str_replace(colnames(df), pattern, "")
df
}
# Chunk 4
gaming_stock_tickers <- c("EA", "ATVI", "NTDOY", "NVDA")
gaming_and_casino_stock_tickers <- c("MGM", "LVS", "MLCO", "WYNN")
analysis_dates <- list(start = as.Date("2016-01-01"), end = as.Date(Sys.Date()))
gaming_stocks_raw <-
tibble(tickers = gaming_stock_tickers) %>%
add_stocks(tickers, analysis_dates$start, analysis_dates$end)
casino_stocks_raw <-
tibble(tickers = gaming_and_casino_stock_tickers) %>%
add_stocks(tickers, analysis_dates$start, analysis_dates$end)
# Chunk 5
gaming_stocks <-
gaming_stocks_raw %>%
mutate(closing = map2(stocks, tickers,
function(stk, tck, var_name) extract_xts(stk, tck, var_name), "Close")) %>%
mutate(closing = map2(closing, tickers,
function(cls, tck) remove_pattern_from_colnames(cls, paste0(tck, "\\."))))
map2(gaming_stocks$closing, gaming_stocks$tickers,
function(x, y) qplot(stock_date, Close,  data = x, geom = "line", main = y))
tech_stock_tickers <- c("MSFT", "AAPL", "GOOGL", "FB", "INTC", "CSCO", "TSM", "ORCL", "ADBE", "IBM")
tech_stock_tickers <- c("MSFT", "AAPL", "GOOGL", "FB", "INTC", "CSCO", "TSM", "ORCL", "ADBE", "IBM")
tech_stock_tickers
tech_stocks_raw <-
tibble(tickers = tech_stock_tickers) %>%
add_stocks(tickers, analysis_dates$start, analysis_dates$end)
gaming_stocks_normalised <-
gaming_stocks %>%
mutate(closing_normalised = map(closing, function(df) { df$Close <- df$Close / max(df$Close) ; df }))
gaming_stocks_normalised$closing_normalised
install.packages("fable")
R.version
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(dplyr)
library(ggplot2)
library(purrr)
library(quantmod)
# Chunk 3: functions
add_stocks <- function(df, ticker_var, start_date, end_date, data_source = "yahoo") {
ticker_q = dplyr::enquo(ticker_var)
mutate(df,
stocks = map(!! ticker_q,
function(x, y, z) getSymbols(x, src = data_source,
from = y, to = z,
auto.assign = FALSE),
start_date, end_date))
}
extract_xts <- function(xts_obj, ticker_name, metric) {
xts_column = paste0(ticker_name, ".", metric)
result <-
xts_obj[ , xts_column] %>%
as.data.frame() %>%
tibble::rownames_to_column(var = "stock_date") %>%
as_tibble() %>%
mutate(stock_date = as.Date(stock_date))
result
}
remove_pattern_from_colnames <- function(df, pattern) {
colnames(df) = stringr::str_replace(colnames(df), pattern, "")
df
}
# Chunk 4
gaming_stock_tickers <- c("EA", "ATVI", "NTDOY", "NVDA")
gaming_and_casino_stock_tickers <- c("MGM", "LVS", "MLCO", "WYNN")
tech_stock_tickers <- c("MSFT", "AAPL", "GOOGL", "FB", "INTC", "CSCO", "TSM", "ORCL", "ADBE", "IBM")
analysis_dates <- list(start = as.Date("2016-01-01"), end = as.Date(Sys.Date()))
gaming_stocks_raw <-
tibble(tickers = gaming_stock_tickers) %>%
add_stocks(tickers, analysis_dates$start, analysis_dates$end)
casino_stocks_raw <-
tibble(tickers = gaming_and_casino_stock_tickers) %>%
add_stocks(tickers, analysis_dates$start, analysis_dates$end)
tech_stocks_raw <-
tibble(tickers = tech_stock_tickers) %>%
add_stocks(tickers, analysis_dates$start, analysis_dates$end)
# Chunk 5
gaming_stocks <-
gaming_stocks_raw %>%
mutate(closing = map2(stocks, tickers,
function(stk, tck, var_name) extract_xts(stk, tck, var_name), "Close")) %>%
mutate(closing = map2(closing, tickers,
function(cls, tck) remove_pattern_from_colnames(cls, paste0(tck, "\\."))))
map2(gaming_stocks$closing, gaming_stocks$tickers,
function(x, y) qplot(stock_date, Close,  data = x, geom = "line", main = y))
library(dplyr)
library(ggplot2)
library(purrr)
library(quantmod)
install.packages(c("tidyverse", "quantmod", "fable" "tsibble"))
install.packages("tidyverse")
install.packages("quantmod")
install.packages("fable")
devtools::install_github("tidyverts/fable")
install.packages("devtools")
devtools::install_github("tidyverts/fable")
data.frame(a = 1:10) %>% dplyr::tally()
library(dplyr)
devtools::install_github("tidyverts/tsibble")
devtools::install_github("tidyverts/tsibble")
devtools::install_github("tidyverse/dplyr/rc_0.8.0")
devtools::install_github("tidyverse/dplyr@rc_0.8.0")
devtools::install_github("tidyverse/dplyr@rc_0.8.0")
devtools::install_github("tidyverse/dplyr@rc_0.8.0")
devtools::install_github("tidyverts/tsibble")
install.packages("feast")
devtools::install_github("tidyverts/feast")
devtools::install_github("tidyverts/feast")
gaming_stocks_normalised
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(dplyr)
library(ggplot2)
library(purrr)
library(quantmod)
library(tsibble)
library(feast)
# Chunk 3: functions
add_stocks <- function(df, ticker_var, start_date, end_date, data_source = "yahoo") {
ticker_q = dplyr::enquo(ticker_var)
mutate(df,
stocks = map(!! ticker_q,
function(x, y, z) getSymbols(x, src = data_source,
from = y, to = z,
auto.assign = FALSE),
start_date, end_date))
}
extract_xts <- function(xts_obj, ticker_name, metric) {
xts_column = paste0(ticker_name, ".", metric)
result <-
xts_obj[ , xts_column] %>%
as.data.frame() %>%
tibble::rownames_to_column(var = "stock_date") %>%
as_tibble() %>%
mutate(stock_date = as.Date(stock_date))
result
}
remove_pattern_from_colnames <- function(df, pattern) {
colnames(df) = stringr::str_replace(colnames(df), pattern, "")
df
}
# Chunk 4
gaming_stock_tickers <- c("EA", "ATVI", "NTDOY", "NVDA")
gaming_and_casino_stock_tickers <- c("MGM", "LVS", "MLCO", "WYNN")
tech_stock_tickers <- c("MSFT", "AAPL", "GOOGL", "FB", "INTC", "CSCO", "TSM", "ORCL", "ADBE", "IBM")
analysis_dates <- list(start = as.Date("2016-01-01"), end = as.Date(Sys.Date()))
gaming_stocks_raw <-
tibble(tickers = gaming_stock_tickers) %>%
add_stocks(tickers, analysis_dates$start, analysis_dates$end)
casino_stocks_raw <-
tibble(tickers = gaming_and_casino_stock_tickers) %>%
add_stocks(tickers, analysis_dates$start, analysis_dates$end)
tech_stocks_raw <-
tibble(tickers = tech_stock_tickers) %>%
add_stocks(tickers, analysis_dates$start, analysis_dates$end)
# Chunk 5
gaming_stocks <-
gaming_stocks_raw %>%
mutate(closing = map2(stocks, tickers,
function(stk, tck, var_name) extract_xts(stk, tck, var_name), "Close")) %>%
mutate(closing = map2(closing, tickers,
function(cls, tck) remove_pattern_from_colnames(cls, paste0(tck, "\\."))))
map2(gaming_stocks$closing, gaming_stocks$tickers,
function(x, y) qplot(stock_date, Close,  data = x, geom = "line", main = y))
install.packages("feasts")
devtools::install_github("tidyverts/feasts")
library(tsibble)
library(feasts)
gaming_stocks_normalised
gaming_stocks_normalised <-
gaming_stocks %>%
mutate(closing_normalised = map(closing, function(df) { df$Close <- df$Close / max(df$Close) ; df }))
gaming_stocks_normalised
?as_tsibble
gaming_stocks_normalised$closing_normalised
gaming_stocks_normalised %>%
mutate(closing_normalised = tsibble::as_tsibble(index = stock_date))
gaming_stocks_normalised %>%
mutate(closing_normalised = map(closing_normalised, function(x) tsibble::as_tsibble(x, index = stock_date)))
gaming_stocks_normalised <-
gaming_stocks_normalised %>%
mutate(closing_normalised = map(closing_normalised, function(x) tsibble::as_tsibble(x, index = stock_date)))
gaming_stocks_normalised$closing_normalised
dplyr::bind_rows(gaming_stocks_normalised$closing_normalised)
gaming_stocks_normalised <-
gaming_stocks %>%
mutate(closing_normalised = map(closing, function(df) { df$Close <- df$Close / max(df$Close) ; df }))
dplyr::bind_rows(gaming_stocks_normalised$closing_normalised)
gaming_stocks_normalised
gaming_stocks %>%
mutate(closing_normalised = map(closing, function(df) { df$Close <- df$Close / max(df$Close) ; df })) %>%
mutate(closing_normalised = map2(closing_normalised, tickers, function(x, y) mutate(x, ticker = y)))
gaming_stocks_normalised <-
gaming_stocks %>%
mutate(closing_normalised = map(closing, function(df) { df$Close <- df$Close / max(df$Close) ; df })) %>%
mutate(closing_normalised = map2(closing_normalised, tickers, function(x, y) mutate(x, ticker = y)))
dplyr::bind_rows(gaming_stocks_normalised$closing_normalised)
dplyr::bind_rows(gaming_stocks_normalised$closing_normalised) %>%
spread(ticker, Close)
dplyr::bind_rows(gaming_stocks_normalised$closing_normalised)
dplyr::bind_rows(gaming_stocks_normalised$closing_normalised) %>%
as_tsibble(index = stock_date, key = ticker)
dplyr::bind_rows(gaming_stocks_normalised$closing_normalised) %>%
as_tsibble(index = stock_date, key = id(ticker))
?feasts
feasts::CCF()
dplyr::bind_rows(gaming_stocks_normalised$closing_normalised) %>%
as_tsibble(index = stock_date, key = id(ticker)) %>%
feasts::CCF()
?CCF
dplyr::bind_rows(gaming_stocks_normalised$closing_normalised) %>%
as_tsibble(index = stock_date, key = id(ticker)) %>%
feasts::ACF()
dplyr::bind_rows(gaming_stocks_normalised$closing_normalised) %>%
as_tsibble(index = stock_date, key = id(ticker)) %>%
feasts::ACF() %>%
plot()
dplyr::bind_rows(gaming_stocks_normalised$closing_normalised) %>%
as_tsibble(index = stock_date, key = id(ticker)) %>%
feasts::ACF() %>% View()
dplyr::bind_rows(gaming_stocks_normalised$closing_normalised) %>%
as_tsibble(index = stock_date, key = id(ticker)) %>%
feasts::ACF() %>% View()
autoplot()
dplyr::bind_rows(gaming_stocks_normalised$closing_normalised) %>%
as_tsibble(index = stock_date, key = id(ticker)) %>%
feasts::ACF() %>%
autoplot()
dplyr::bind_rows(gaming_stocks_normalised$closing_normalised) %>%
as_tsibble(index = stock_date, key = id(ticker))
dplyr::bind_rows(gaming_stocks_normalised$closing_normalised) %>%
as_tsibble(index = stock_date, key = id(ticker)) %>%
spread(ticker, Close)
?rowwise
?pmap
dplyr::bind_rows(gaming_stocks_normalised$closing_normalised) %>%
as_tsibble(index = stock_date, key = id(ticker)) %>%
spread(ticker, Close) %>%
mutate(stock_mean = pmap_dbl(list(ATVI, EA, NTDOY, NVDA), .f = mean))
gaming_stocks_df <-
dplyr::bind_rows(gaming_stocks_normalised$closing_normalised) %>%
as_tsibble(index = stock_date, key = id(ticker)) %>%
spread(ticker, Close)
gaming_stocks_df
colnames(gaming_stocks_df)[2:length(colnames(gaming_stocks_df))]
stock_vars <- colnames(gaming_stocks_df)[2:length(colnames(gaming_stocks_df))]
gaming_stocks_df %>%
mutate(stock_mean = pmap_dbl(stock_vars, .f = mean)) %>%
select(stock_date, stock_mean)
stock_vars <- as.list(colnames(gaming_stocks_df)[2:length(colnames(gaming_stocks_df))])
stock_vars
gaming_stocks_df %>%
mutate(stock_mean = pmap_dbl(stock_vars, .f = mean)) %>%
select(stock_date, stock_mean)
colnames(gaming_stocks_df)[2:length(colnames(gaming_stocks_df))]
flatten(as.list(colnames(gaming_stocks_df)[2:length(colnames(gaming_stocks_df))]))
unlist(as.list(colnames(gaming_stocks_df)[2:length(colnames(gaming_stocks_df))]))
as.list(colnames(gaming_stocks_df)[2:length(colnames(gaming_stocks_df))])
as.list(colnames(gaming_stocks_df)[2:length(colnames(gaming_stocks_df))])[[1]]
as.list(colnames(gaming_stocks_df)[2:length(colnames(gaming_stocks_df))])[1]
stock_vars <- as.list(colnames(gaming_stocks_df)[2:length(colnames(gaming_stocks_df))])[1]
gaming_stocks_df %>%
mutate(stock_mean = pmap_dbl(stock_vars, .f = mean)) %>%
select(stock_date, stock_mean)
gaming_stocks_df %>%
mutate(stock_mean = pmap_dbl(stock_vars, .f = mean))
gaming_stocks_df %>%
mutate(stock_mean = pmap_dbl(select(., -stock_date), .f = mean)) %>%
select(stock_date, stock_mean)
gaming_stocks_df <-
dplyr::bind_rows(gaming_stocks_normalised$closing_normalised) %>%
spread(ticker, Close)
gaming_stocks_df %>%
mutate(stock_mean = pmap_dbl(select(., -stock_date), .f = mean)) %>%
select(stock_date, stock_mean)
gaming_stocks_df
?runif
gaming_stocks_df %>%
mutate(stock_mean = pmap_dbl(select(., -stock_date), .f = ~mean(c(...)))) %>%
select(stock_date, stock_mean)
gaming_stocks_df %>%
mutate(stock_mean = pmap_dbl(select(., -stock_date), .f = ~mean(c(...))))
gaming_stocks_df %>%
mutate(stock_mean = pmap_dbl(select(., -stock_date), .f = ~mean(c(...)))) %>%
select(stock_date, stock_mean)
gaming_stocks_df <-
dplyr::bind_rows(gaming_stocks_normalised$closing_normalised) %>%
spread(ticker, Close) %>%
mutate(stock_mean = pmap_dbl(select(., -stock_date), .f = ~mean(c(...)))) %>%
select(stock_date, stock_mean)
gaming_stocks_normalised
gaming_stocks_normalised$closing_normalised
gaming_stocks_normalised %>%
mutate(closing_normalised = map(closing_normalised, function(x, y) left_join(x, y, by = c("stock_date")), gaming_stocks_df))
gaming_stocks_normalised %>%
mutate(closing_normalised = map(closing_normalised,
function(x, y) left_join(x, y, by = c("stock_date")),
gaming_stocks_df)) %>%
mutate(correlation_to_mean = map(closing_normalised, function(x) cor(x$Close, x$stock_mean)))
gaming_stocks_normalised %>%
mutate(closing_normalised = map(closing_normalised,
function(x, y) left_join(x, y, by = c("stock_date")),
gaming_stocks_df)) %>%
mutate(correlation_to_mean = map_dbl(closing_normalised, function(x) cor(x$Close, x$stock_mean)))
gaming_stocks_normalised %>%
select(closing_normalised) %>%
pull() %>%
bind_rows()
gaming_stocks_normalised %>%
select(closing_normalised) %>%
bind_rows()
gaming_stocks_normalised %>%
select(closing_normalised) %>%
pull() %>%
bind_rows()
gaming_stocks_normalised %>%
select(closing_normalised) %>%
pull() %>%
bind_rows() %>%
ggplot(aes(stock_date, Close, colour = ticker)) +
geom_line()
gaming_stocks_normalised %>%
select(closing_normalised) %>%
pull() %>%
bind_rows() %>%
ggplot(aes(stock_date, Close, colour = ticker)) +
geom_smooth()
gaming_stocks_normalised %>%
select(closing_normalised) %>%
pull() %>%
bind_rows() %>%
ggplot(aes(stock_date, Close, colour = ticker)) +
geom_smooth(se = FALSE) +
geom_line(alpha = 0.5)
?loess
gaming_stocks_normalised %>%
select(closing_normalised) %>%
pull() %>%
bind_rows() %>%
ggplot(aes(stock_date, Close, colour = ticker)) +
geom_smooth(se = FALSE, span = 0.1) +
geom_line(alpha = 0.25)
gaming_stocks_normalised %>%
select(closing_normalised) %>%
pull() %>%
bind_rows() %>%
ggplot(aes(stock_date, Close, colour = ticker)) +
geom_smooth(se = FALSE, span = 0.2) +
geom_line(alpha = 0.3)
573*4
573*4*12
573*52
126 * 3600
(126 * 3600) / 1024
(126 * 3600) / (1024 * 8)
