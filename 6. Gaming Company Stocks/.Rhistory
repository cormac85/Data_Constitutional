casino_stocks_raw %>%
mutate(closing = map2(stocks, tickers,
function(stk, tck, var_name) extract_xts(stk, tck, var_name), "Close")) %>%
mutate(closing = map2(closing, tickers,
function(cls, tck) remove_pattern_from_colnames(cls, paste0(tck, "\\."))))
casino_stocks <-
casino_stocks_raw %>%
mutate(closing = map2(stocks, tickers,
function(stk, tck, var_name) extract_xts(stk, tck, var_name), "Close")) %>%
mutate(closing = map2(closing, tickers,
function(cls, tck) remove_pattern_from_colnames(cls, paste0(tck, "\\."))))
map2(tech_stocks$closing, tech_stocks$tickers,
function(x, y) qplot(stock_date, Close,  data = x, geom = "line", main = y))
casino_stocks_normalised <-
casino_stocks %>%
mutate(closing_normalised = map(closing,
function(df) { df$Close <- df$Close / max(df$Close) ; df })) %>%
mutate(closing_normalised = map2(closing_normalised, tickers,
function(x, y) mutate(x, ticker = y)))
casino_stocks_normalised %>%
select(-stocks, -closing) %>%
unnest %>%
group_by(stock_date) %>%
summarise(mean_close = mean(Close)) %>%
ggplot(aes(stock_date, mean_close)) +
geom_line()
casino_stocks_mean <-
casino_stocks_normalised %>%
select(-stocks, -closing) %>%
unnest %>%
group_by(stock_date) %>%
summarise(mean_close = mean(Close))
gaming_stocks_normalised$casino_mean <- rep(list(casino_stocks_mean), 4)
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_casino = map2(closing_normalised, casino_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_tech, closing_normalised, casino_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_casino, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to Casino Stocks",
subtitle = "Closing stock value divided by closing mean of 4 casino  firms - 1.0 means they performed equally as well relative to each stock's peak") +
blorg::blog_theme +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)])
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_casino = map2(closing_normalised, casino_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_casino, closing_normalised, casino_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_casino, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to Casino Stocks",
subtitle = "Closing stock value divided by closing mean of 4 casino  firms - 1.0 means they performed equally as well relative to each stock's peak") +
blorg::blog_theme +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)])
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_casino = map2(closing_normalised, casino_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_casino, closing_normalised, casino_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_casino, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to Casino Stocks",
subtitle = "Closing stock value divided by closing mean of 4 casino  firms - 1.0 means they performed equally as well relative to each stock's peak") +
blorg::blog_theme +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25))
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_casino = map2(closing_normalised, casino_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_casino, closing_normalised, casino_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_casino, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to Casino Stocks",
subtitle = "Closing stock value divided by closing mean of 4 casino  firms - 1.0 means they performed equally as well relative to each stock's peak") +
blorg::blog_theme +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5),limits = c(0.0, 1.5))
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_tech = map2(closing_normalised, tech_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_tech, closing_normalised, tech_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_tech, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to US Tech",
subtitle = "Closing stock value divided by closing mean of 8 US tech firms - 1.0 means they performed equally as well relative to each stock's peak") +
blorg::blog_theme +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_casino = map2(closing_normalised, casino_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_casino, closing_normalised, casino_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_casino, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to Casino Stocks",
subtitle = "Closing stock value divided by closing mean of 4 casino  firms - 1.0 means they performed equally as well relative to each stock's peak") +
blorg::blog_theme +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
gaming_stocks_normalised$tech_mean <- rep(list(tech_stocks_mean), 4)
p_game_v_tech <-
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_tech = map2(closing_normalised, tech_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_tech, closing_normalised, tech_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_tech, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to US Tech",
subtitle = "Closing stock value divided by closing mean of 8 US tech firms - 1.0 means they performed equally as well relative to each stock's peak") +
blorg::blog_theme +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
p_game_v_tech
gaming_stocks_normalised$casino_mean <- rep(list(casino_stocks_mean), 4)
p_game_v_casino <-
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_casino = map2(closing_normalised, casino_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_casino, closing_normalised, casino_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_casino, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to Casino Stocks",
subtitle = "Closing stock value divided by closing mean of 4 casino  firms - 1.0 means they performed equally as well relative to each stock's peak") +
blorg::blog_theme +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
install.packages("gridextra")
install.packages("gridExtra")
gridExtra::grid.arrange(p_game_v_tech, p_game_v_casino)
?grid.arrange
gridExtra::grid.arrange(p_game_v_tech, p_game_v_casino, ncol = 2)
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_tech = map2(closing_normalised, tech_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_tech, closing_normalised, tech_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_tech, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to US Tech",
subtitle = "Closing stock value divided by closing mean of 8 US tech firms - 1.0 means they performed equally as well relative to each stock's peak") +
blorg::blog_theme +
theme(axis.text.y = element_blank(), legend.position = "none") +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_tech = map2(closing_normalised, tech_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_tech, closing_normalised, tech_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_tech, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to US Tech",
subtitle = "Closing stock value divided by closing mean of 8 US tech firms - 1.0 means they performed equally as well relative to each stock's peak") +
blorg::blog_theme +
theme(axis.title.y =  = element_blank(), legend.position = "none") +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_tech = map2(closing_normalised, tech_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_tech, closing_normalised, tech_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_tech, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to US Tech",
subtitle = "Closing stock value divided by closing mean of 8 US tech firms - 1.0 means they performed equally as well relative to each stock's peak") +
blorg::blog_theme +
theme(axis.title.y = element_blank(), legend.position = "none") +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
gaming_stocks_normalised$tech_mean <- rep(list(tech_stocks_mean), 4)
p_game_v_tech <-
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_tech = map2(closing_normalised, tech_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_tech, closing_normalised, tech_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_tech, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to US Tech",
subtitle = "Closing stock value divided by closing mean of 8 US tech firms - 1.0 means they performed equally as well relative to each stock's peak") +
blorg::blog_theme +
theme(axis.title.y = element_blank(), legend.position = "none") +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
gaming_stocks_normalised$casino_mean <- rep(list(casino_stocks_mean), 4)
p_game_v_casino <-
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_casino = map2(closing_normalised, casino_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_casino, closing_normalised, casino_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_casino, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to Casino Stocks",
subtitle = "Closing stock value divided by closing mean of 4 casino  firms - 1.0 means they performed equally as well relative to each stock's peak") +
blorg::blog_theme +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
gridExtra::grid.arrange(p_game_v_tech, p_game_v_casino, ncol = 2)
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_casino = map2(closing_normalised, casino_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_casino, closing_normalised, casino_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_casino, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to Casino Stocks",
subtitle = "Closing stock value divided by closing mean of 4 casino  firms - 1.0 means they performed equally as well relative to each stock's peak") +
blorg::blog_theme +
theme(legend.position = "none")
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_casino = map2(closing_normalised, casino_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_casino, closing_normalised, casino_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_casino, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to Casino Stocks",
subtitle = "Closing stock value divided by closing mean of 4 casino  firms - 1.0 means they performed equally as well relative to each stock's peak") +
blorg::blog_theme +
theme(legend.position = "none") +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_tech = map2(closing_normalised, tech_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_tech, closing_normalised, tech_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_tech, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to US Tech",
subtitle = "Closing stock value divided by closing mean of 8 US tech firms - 1.0 means they performed equally as well relative to each stock's peak") +
blorg::blog_theme +
theme(axis.title.y = element_blank()) +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
gaming_stocks_normalised$tech_mean <- rep(list(tech_stocks_mean), 4)
p_game_v_tech <-
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_tech = map2(closing_normalised, tech_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_tech, closing_normalised, tech_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_tech, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to US Tech",
subtitle = "Closing stock value divided by closing mean of 8 US tech firms - 1.0 means they performed equally as well relative to each stock's peak") +
blorg::blog_theme +
theme(axis.title.y = element_blank()) +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
gaming_stocks_normalised$casino_mean <- rep(list(casino_stocks_mean), 4)
p_game_v_casino <-
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_casino = map2(closing_normalised, casino_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_casino, closing_normalised, casino_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_casino, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to Casino Stocks",
subtitle = "Closing stock value divided by closing mean of 4 casino  firms - 1.0 means they performed equally as well relative to each stock's peak",
y = "Normalised Stock Performance") +
blorg::blog_theme +
theme(legend.position = "none") +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
gridExtra::grid.arrange(p_game_v_tech, p_game_v_casino, ncol = 2)
gaming_stocks_normalised$tech_mean <- rep(list(tech_stocks_mean), 4)
p_game_v_tech <-
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_tech = map2(closing_normalised, tech_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_tech, closing_normalised, tech_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_tech, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to US Tech",
subtitle = "Closing stock value divided by closing mean of 8 US tech firms - 1.0 means they performed equally as well relative to each stock's peak") +
blorg::blog_theme +
theme(legend.position = "none")
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
gaming_stocks_normalised$casino_mean <- rep(list(casino_stocks_mean), 4)
p_game_v_casino <-
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_casino = map2(closing_normalised, casino_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_casino, closing_normalised, casino_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_casino, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to Casino Stocks",
subtitle = "Closing stock value divided by closing mean of 4 casino  firms - 1.0 means they performed equally as well relative to each stock's peak",
y = "Normalised Stock Performance") +
blorg::blog_theme +
theme(axis.title.y = element_blank()) +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
gridExtra::grid.arrange(p_game_v_tech, p_game_v_casino, ncol = 2)
gaming_stocks_normalised$tech_mean <- rep(list(tech_stocks_mean), 4)
p_game_v_tech <-
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_tech = map2(closing_normalised, tech_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_tech, closing_normalised, tech_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_tech, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to US Tech",
subtitle = "Closing stock value divided by closing mean of 8 US tech firms - 1.0 means they performed equally as well relative to each stock's peak") +
blorg::blog_theme +
theme(legend.position = "none") +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
gaming_stocks_normalised$casino_mean <- rep(list(casino_stocks_mean), 4)
p_game_v_casino <-
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_casino = map2(closing_normalised, casino_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_casino, closing_normalised, casino_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_casino, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to Casino Stocks",
subtitle = "Closing stock value divided by closing mean of 4 casino  firms - 1.0 means they performed equally as well relative to each stock's peak",
y = "Normalised Stock Performance") +
blorg::blog_theme +
theme(axis.title.y = element_blank()) +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
gridExtra::grid.arrange(p_game_v_tech, p_game_v_casino, ncol = 2)
gaming_stocks_normalised$tech_mean <- rep(list(tech_stocks_mean), 4)
p_game_v_tech <-
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_tech = map2(closing_normalised, tech_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_tech, closing_normalised, tech_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_tech, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to US Tech",
subtitle = "Closing stock value divided by closing mean of 8 US tech firms - 1.0 means they performed equally as well relative to each stock's peak",
y = "Normalised Stock Performance") +
blorg::blog_theme +
theme(legend.position = "none") +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
gaming_stocks_normalised$casino_mean <- rep(list(casino_stocks_mean), 4)
p_game_v_casino <-
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_casino = map2(closing_normalised, casino_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_casino, closing_normalised, casino_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_casino, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to Casino Stocks",
subtitle = "Closing stock value divided by closing mean of 4 casino  firms - 1.0 means they performed equally as well relative to each stock's peak",
y = "Normalised Stock Performance") +
blorg::blog_theme +
theme(axis.title.y = element_blank()) +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,5)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
gridExtra::grid.arrange(p_game_v_tech, p_game_v_casino, ncol = 2)
gaming_stocks_normalised$tech_mean <- rep(list(tech_stocks_mean), 4)
p_game_v_tech <-
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_tech = map2(closing_normalised, tech_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_tech, closing_normalised, tech_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_tech, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to US Tech",
subtitle = "Closing stock value divided by closing mean of 8 US tech firms - 1.0 means they performed equally as well relative to each stock's peak",
y = "Normalised Stock Performance") +
blorg::blog_theme +
theme(legend.position = "none") +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,6)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
gaming_stocks_normalised$casino_mean <- rep(list(casino_stocks_mean), 4)
p_game_v_casino <-
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_casino = map2(closing_normalised, casino_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_casino, closing_normalised, casino_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_casino, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to Casino Stocks",
subtitle = "Closing stock value divided by closing mean of 4 casino  firms - 1.0 means they performed equally as well relative to each stock's peak",
y = "Normalised Stock Performance") +
blorg::blog_theme +
theme(axis.title.y = element_blank()) +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,6)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
gridExtra::grid.arrange(p_game_v_tech, p_game_v_casino, ncol = 2)
gaming_stocks_normalised$tech_mean <- rep(list(tech_stocks_mean), 4)
p_game_v_tech <-
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_tech = map2(closing_normalised, tech_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_tech, closing_normalised, tech_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_tech, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to US Tech",
subtitle = "Closing stock value divided by closing mean of 8 US tech firms - 1.0 means they performed equally as well relative to each stock's peak",
y = "Normalised Stock Performance") +
blorg::blog_theme +
theme(legend.position = "none") +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,7)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
gaming_stocks_normalised$casino_mean <- rep(list(casino_stocks_mean), 4)
p_game_v_casino <-
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_casino = map2(closing_normalised, casino_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_casino, closing_normalised, casino_mean) %>%
unnest() %>%
ggplot(aes(stock_date, gaming_normalised_to_casino, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
labs(title = "Gaming Company Stocks Normalised to Casino Stocks",
subtitle = "Closing stock value divided by closing mean of 4 casino  firms - 1.0 means they performed equally as well relative to each stock's peak",
y = "Normalised Stock Performance") +
blorg::blog_theme +
theme(axis.title.y = element_blank()) +
scale_colour_manual(values = blorg::blog_palette[c(1,2,4,7)]) +
scale_y_continuous(breaks = c(0.25, 0.5, 0.75, 1.0, 1.25, 1.5), limits = c(0.0, 1.5))
gridExtra::grid.arrange(p_game_v_tech, p_game_v_casino, ncol = 2)
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_casino = map2(closing_normalised, casino_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_casino, closing_normalised, casino_mean)
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_casino = map2(closing_normalised, casino_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_casino, closing_normalised, casino_mean) %>%
unnest() %>%
ggplot(aes(stock_date, casino_mean, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2)
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_casino = map2(closing_normalised, casino_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_casino, closing_normalised, casino_mean) %>%
unnest()
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_casino = map2(closing_normalised, casino_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_casino, closing_normalised, casino_mean) %>%
unnest() %>%
ggplot(aes(stock_date, mean_close, colour = tickers)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2)
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_casino = map2(closing_normalised, casino_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_casino, closing_normalised, casino_mean) %>%
unnest() %>%
ggplot(aes(stock_date, mean_close)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
geom_smooth(aes(stock_date, Close, colour = ticker), inherit.aes = FALSE)
gaming_stocks_normalised %>%
mutate(gaming_normalised_to_casino = map2(closing_normalised, casino_mean,
function(x, y) { (x$Close / y$mean_close) })) %>%
select(tickers, gaming_normalised_to_casino, closing_normalised, casino_mean) %>%
unnest() %>%
ggplot(aes(stock_date, mean_close)) +
geom_line(alpha = 0.3) +
geom_smooth(se = FALSE, span = 0.2) +
geom_line(aes(stock_date, Close, colour = ticker), inherit.aes = FALSE)
gridExtra::grid.arrange(p_game_v_tech, p_game_v_casino, ncol = 2)
