heights = c(.75, .25), ncol = 1, nrow = 2)
p.population <-
ggplot(converted.ghg.data, aes(Year, population)) +
geom_line(size = 1.5) +
test.theme +
scale_color_manual(values = blog_palette) +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
scale_y_continuous(breaks = c(3.8e6, 4.2e6, 4.6e6),
labels = c("3.8", "4.2", "4.6")) +
theme(axis.ticks.margin = unit(c(0, 0, 0, 1), "cm")) +
labs(y = "Population (millions)")
grid.arrange(p.ghg.converted, p.population,
heights = c(.75, .25), ncol = 1, nrow = 2)
p.population <-
ggplot(converted.ghg.data, aes(Year, population)) +
geom_line(size = 1.5) +
test.theme +
scale_color_manual(values = blog_palette) +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
scale_y_continuous(breaks = c(3.8e6, 4.2e6, 4.6e6),
labels = c("3.8", "4.2", "4.6")) +
theme(axis.ticks.margin = unit(c(0, 0, 0, 0), "cm")) +
labs(y = "Population (millions)")
grid.arrange(p.ghg.converted, p.population,
heights = c(.75, .25), ncol = 1, nrow = 2)
p.population <-
ggplot(converted.ghg.data, aes(Year, population)) +
geom_line(size = 1.5) +
test.theme +
scale_color_manual(values = blog_palette) +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
scale_y_continuous(breaks = c(3.8e6, 4.2e6, 4.6e6),
labels = c("3.8", "4.2", "4.6")) +
theme(axis.ticks.margin = unit(c(0, 0, 0.5, 0), "cm")) +
labs(y = "Population (millions)")
grid.arrange(p.ghg.converted, p.population,
heights = c(.75, .25), ncol = 1, nrow = 2)
p.population <-
ggplot(converted.ghg.data, aes(Year, population)) +
geom_line(size = 1.5) +
test.theme +
scale_color_manual(values = blog_palette) +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
scale_y_continuous(breaks = c(3.8e6, 4.2e6, 4.6e6),
labels = c("3.8", "4.2", "4.6")) +
theme(axis.ticks.margin = unit(c(0, 0, 0.4, 0), "cm")) +
labs(y = "Population (millions)")
grid.arrange(p.ghg.converted, p.population,
heights = c(.75, .25), ncol = 1, nrow = 2)
p.population <-
ggplot(converted.ghg.data, aes(Year, population)) +
geom_line(size = 1.5) +
test.theme +
scale_color_manual(values = blog_palette) +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
scale_y_continuous(breaks = c(3.8e6, 4.2e6, 4.6e6),
labels = c("3.8", "4.2", "4.6")) +
theme(axis.ticks.margin = unit(c(0, 0, 0.2, 0), "cm")) +
labs(y = "Population (millions)")
grid.arrange(p.ghg.converted, p.population,
heights = c(.75, .25), ncol = 1, nrow = 2)
p.population <-
ggplot(converted.ghg.data, aes(Year, population)) +
geom_line(size = 1.5) +
test.theme +
scale_color_manual(values = blog_palette) +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
scale_y_continuous(breaks = c(3.8e6, 4.2e6, 4.6e6),
labels = c("3.8", "4.2", "4.6")) +
theme(axis.ticks.margin = unit(c(0, 0, 0.3, 0), "cm")) +
labs(y = "Population (millions)")
grid.arrange(p.ghg.converted, p.population,
heights = c(.75, .25), ncol = 1, nrow = 2)
dir()
foo <- read.csv("Data_Extract_From_World_Development_Indicators_Data.csv")
View(foo)
foo <- read.csv("Data_Extract_From_World_Development_Indicators_Data.csv")
View(foo)
read.csv("Data_Extract_From_World_Development_Indicators_Data.csv")  %>% View()
irish.gni <-
read.csv("Data_Extract_From_World_Development_Indicators_Data.csv")
t(irish.gni)
t(irish.gni)[[5:]]
t(irish.gni) %>% length()
t(irish.gni)[[5:20]]
t(irish.gni)[5:20]
t(irish.gni)[5:17]
gni <- t(irish.gni)[5:17]
converted.ghg.data$gni <- gni
converted.ghg.data %<>%
mutate(gni.per.capita = (gni / population))
library(magrittr)
converted.ghg.data %<>%
mutate(gni.per.capita = (gni / population))
converted.ghg.data %>%
mutate(gni.per.capita = (gni / population))
rm(gni)
gni.vector <- t(irish.gni)[5:17]
converted.ghg.data$gni <- gni.vector
converted.ghg.data %>%
mutate(gni.per.capita = (gni / population))
converted.ghg.data %>%
mutate(gni.per.capita = gni / population)
converted.ghg.data %>%
mutate(gni.per.capita = 1/2)
converted.ghg.data %>%
mutate(gni.per.capita = gni/ population)
converted.ghg.data$gni / converted.ghg.data$population
(converted.ghg.data$gni / converted.ghg.data$population)
(converted.ghg.data$gni * converted.ghg.data$population)
(converted.ghg.data$gni * converted.ghg.data$population)
converted.ghg.data %>%
mutate(gni = as.numeric(gni)) %>%
mutate(gni.per.capita = gni/ population)
converted.ghg.data %<>%
mutate(gni = as.numeric(gni)) %>%
mutate(gni.per.capita = gni/ population)
ggplot(converted.ghg.data, aes(gni.per.capita, ghg.emmissions.per.capita) +
geom_line(size = 1.5) +
test.theme
ggplot(converted.ghg.data, aes(gni.per.capita, ghg.emmissions.per.capita)) +
geom_line(size = 1.5) +
test.theme
ggplot(converted.ghg.data, aes(Year, gni.per.capita)) +
geom_line(size = 1.5) +
test.theme
ggplot(converted.ghg.data, aes(Year, gni.per.capita)) +
geom_line(size = 1.5) +
test.theme +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012))
ggplot(converted.ghg.data, aes(Year, gni.per.capita)) +
geom_line(size = 1.5) +
test.theme +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Gross National Income (2000 - 2012)",
y = "GNI Per Capita ($)")
ggplot(converted.ghg.data, aes(Year, gni.per.capita)) +
geom_line(size = 1.5) +
test.theme +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Gross National Income per Capita (2000 - 2012)",
y = "GNI Per Capita ($)")
p.gni <-
ggplot(converted.ghg.data, aes(Year, gni.per.capita)) +
geom_line(size = 1.5) +
test.theme +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Gross National Income per Capita (2000 - 2012)",
y = "GNI Per Capita ($)")
ggplot(converted.ghg.data, aes(Year, ghg.emmissions.per.capita)) +
geom_line(size = 1.5) +
test.theme +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Gross National Income per Capita (2000 - 2012)",
y = "GNI Per Capita ($)")
ggplot(converted.ghg.data, aes(Year, gni.per.capita)) +
geom_line(size = 1.5) +
test.theme +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Gross National Income per Capita (2000 - 2012)",
y = "GNI Per Capita ($)")
ggplot(filter(converted.ghg.data, category.short.names == "Total GHG's"),
aes(Year, ghg.emmissions.per.capita)) +
geom_line(size = 1.5) +
test.theme +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Gross National Income per Capita (2000 - 2012)",
y = "GNI Per Capita ($)")
ggplot(converted.ghg.data, aes(Year, gni.per.capita),
colour = blog_palette[2]) +
geom_line(size = 1.5) +
test.theme +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Gross National Income per Capita (2000 - 2012)",
y = "GNI Per Capita ($)")
ggplot(filter(converted.ghg.data, category.short.names == "Total GHG's"),
aes(Year, ghg.emmissions.per.capita),
colour = blog_palette[2]) +
geom_line(size = 1.5) +
test.theme +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Gross National Income per Capita (2000 - 2012)",
y = "GNI Per Capita ($)")
ggplot(converted.ghg.data, aes(Year, gni.per.capita),
colour = blog_palette[1]) +
geom_line(size = 1.5) +
test.theme +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Gross National Income per Capita (2000 - 2012)",
y = "GNI Per Capita ($)")
ggplot(filter(converted.ghg.data, category.short.names == "Total GHG's"),
aes(Year, ghg.emmissions.per.capita)) +
geom_line(size = 1.5, colour = blog_palette[2]) +
test.theme +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Gross National Income per Capita (2000 - 2012)",
y = "GNI Per Capita ($)")
ggplot(converted.ghg.data, aes(Year, gni.per.capita)) +
geom_line(size = 1.5, colour = blog_palette[1]) +
test.theme +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Gross National Income per Capita (2000 - 2012)",
y = "GNI Per Capita ($)")
ggplot(filter(converted.ghg.data, category.short.names == "Total GHG's"),
aes(Year, ghg.emmissions.per.capita)) +
geom_line(size = 1.5, colour = blog_palette[6]) +
test.theme +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Gross National Income per Capita (2000 - 2012)",
y = "GNI Per Capita ($)")
ggplot(converted.ghg.data, aes(Year, gni.per.capita)) +
geom_line(size = 1.5, colour = blog_palette[5]) +
test.theme +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Gross National Income per Capita (2000 - 2012)",
y = "GNI Per Capita ($)")
ggplot(converted.ghg.data, aes(Year, gni.per.capita)) +
geom_line(size = 1.5, colour = blog_palette[7]) +
test.theme +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Gross National Income per Capita (2000 - 2012)",
y = "GNI Per Capita ($)")
ggplot(converted.ghg.data, aes(Year, Total.emissions,
colour = category.short.names)) +
geom_line(size = 1.5) +
test.theme +
scale_color_manual(values = blog_palette, name = "GHG Type") +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Contribution GHG's in CO2 Equivalent",
y = "Total Emissions In CO2 Equivalent (1000 Tons)") +
theme(legend.position = "top")
ggplot(converted.ghg.data, aes(Year, gni.per.capita)) +
geom_line(size = 1.5, colour = blog_palette[10]) +
test.theme +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Gross National Income per Capita (2000 - 2012)",
y = "GNI Per Capita ($)")
ggplot(converted.ghg.data, aes(Year, gni.per.capita)) +
geom_line(size = 1.5, colour = blog_palette[9]) +
test.theme +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Gross National Income per Capita (2000 - 2012)",
y = "GNI Per Capita ($)")
blog_palette
p.ghg.converted
ggplot(converted.ghg.data, aes(Year, population)) +
geom_line(size = 1.5) +
test.theme +
scale_color_manual(values = blog_palette) +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
scale_y_continuous(breaks = c(3.8e6, 4.2e6, 4.6e6),
labels = c("3.8", "4.2", "4.6")) +
theme(axis.ticks.margin = unit(c(0, 0, 0.2, 0), "cm")) +
labs(y = "Population (millions)")
p.population <-
ggplot(converted.ghg.data, aes(Year, population)) +
geom_line(size = 1.5) +
test.theme +
scale_color_manual(values = blog_palette) +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
scale_y_continuous(breaks = c(3.8e6, 4.2e6, 4.6e6),
labels = c("3.8", "4.2", "4.6")) +
theme(axis.ticks.margin = unit(c(0, 0, 0.2, 0), "cm")) +
labs(y = "Population (millions)")
grid.arrange(p.ghg.converted, p.population,
heights = c(.75, .25), ncol = 1, nrow = 2)
grid.arrange(p.gni, p.ghg.per.capita,
heights = c(.5, .5), ncol = 1, nrow = 2)
p.gni <-
ggplot(converted.ghg.data, aes(Year, gni.per.capita)) +
geom_line(size = 1.5) +
test.theme +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Gross National Income per Capita (2000 - 2012)",
y = "GNI Per Capita ($)")
p.ghg.per.capita <-
ggplot(filter(converted.ghg.data, category.short.names == "Total GHG's"),
aes(Year, ghg.emmissions.per.capita)) +
geom_line(size = 1.5, colour = blog_palette[6]) +
test.theme +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Gross National Income per Capita (2000 - 2012)",
y = "GNI Per Capita ($)")
grid.arrange(p.gni, p.ghg.per.capita,
heights = c(.5, .5), ncol = 1, nrow = 2)
p.ghg.per.capita <-
ggplot(filter(converted.ghg.data, category.short.names == "Total GHG's"),
aes(Year, ghg.emmissions.per.capita)) +
geom_line(size = 1.5, colour = blog_palette[6]) +
test.theme +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
theme(axis.ticks.margin = unit(c(0, 0, 0.2, 0), "cm")) +
labs(title = "Irish Total GHG Emmissions per Capita (2000 - 2012)",
y = "GNI Per Capita ($)")
grid.arrange(p.gni, p.ghg.per.capita,
heights = c(.5, .5), ncol = 1, nrow = 2)
p.ghg.per.capita <-
ggplot(filter(converted.ghg.data, category.short.names == "Total GHG's"),
aes(Year, ghg.emmissions.per.capita)) +
geom_line(size = 1.5, colour = blog_palette[6]) +
test.theme +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
theme(axis.ticks.margin = unit(c(0, 0, 0.3, 0), "cm")) +
labs(title = "Irish Total GHG Emmissions per Capita (2000 - 2012)",
y = "GNI Per Capita ($)")
grid.arrange(p.gni, p.ghg.per.capita,
heights = c(.5, .5), ncol = 1, nrow = 2)
grid.arrange(p.gni, p.ghg.per.capita,
heights = c(.5, .5), ncol = 1, nrow = 2)
rm(foo)
converted.ghg.data %<>%
mutate(GHG.gni.ratio = Total.emissions / gni)
converted.ghg.data %<>%
mutate(GHG.gni.ratio = gni / (Total.emissions * 1000))
converted.ghg.data %<>%
mutate(GHG.gni.ratio = (Total.emissions * 1000) / gni,
gni.GHG.ratio = gni / (Total.emissions * 1000))
ggplot(converted.ghg.data, aes(Year, gni.GHG.ratio,
colour = category.short.names)) +
geom_line(size = 1.5) +
test.theme +
scale_color_manual(values = blog_palette, name = "GHG Type") +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Contribution GHG's in CO2 Equivalent",
y = "Total Emissions In CO2 Equivalent (1000 Tons)") +
theme(legend.position = "top")
ggplot(converted.ghg.data, aes(Year, gni.GHG.ratio,
colour = category.short.names)) +
geom_line(size = 1.5)
ggplot(converted.ghg.data, aes(Year, gni.GHG.ratio,
colour = category.short.names)) +
geom_line(size = 1.5) +
test.theme +
scale_color_manual(values = blog_palette, name = "GHG Type") +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Ratio of GNI to GHG Equivalent 2000 - 2012",
y = "Ratio of GNI to GHG Equivalent ($ per ton)") +
theme(legend.position = "top")
ggplot(converted.ghg.data, aes(Year, gni.GHG.ratio,
colour = category.short.names)) +
geom_line(size = 1.5) +
test.theme +
scale_color_manual(values = blog_palette, name = "GHG Type") +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Ratio of GNI to GHG Equivalent 2000 - 2012",
y = "Ratio of GNI to GHG Equivalent ($ per ton)") +
theme(legend.position = "top")
library(bloRg)
library(magrittr)
library(gridExtra)
library(grid)
library(scales)
ggplot(converted.ghg.data, aes(Year, gni.GHG.ratio,
colour = category.short.names)) +
geom_line(size = 1.5) +
test.theme +
scale_color_manual(values = blog_palette, name = "GHG Type") +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Ratio of GNI to GHG Equivalent 2000 - 2012",
y = "Ratio of GNI to GHG Equivalent ($ per ton)") +
theme(legend.position = "top")
ggplot(converted.ghg.data, aes(Year, GHG.gin.ratio,
colour = category.short.names)) +
geom_line(size = 1.5) +
test.theme +
scale_color_manual(values = blog_palette, name = "GHG Type") +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Ratio of GNI to GHG Equivalent 2000 - 2012",
y = "Ratio of GNI to GHG Equivalent ($ per ton)") +
theme(legend.position = "top")
ggplot(converted.ghg.data, aes(Year, GHG.gni.ratio,
colour = category.short.names)) +
geom_line(size = 1.5) +
test.theme +
scale_color_manual(values = blog_palette, name = "GHG Type") +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Ratio of GNI to GHG Equivalent 2000 - 2012",
y = "Ratio of GNI to GHG Equivalent ($ per ton)") +
theme(legend.position = "top")
ggplot(converted.ghg.data, aes(Year, GHG.gni.ratio,
colour = category.short.names)) +
geom_line(size = 1.5) +
test.theme +
scale_color_manual(values = blog_palette, name = "GHG Type") +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Ratio of GHG Equivalent to GNI 2000 - 2012",
y = "Ratio of GHG Equivalent to GNI (tons per dollar)") +
theme(legend.position = "top") +
sclae_y_continuous(labels = comma)
ggplot(converted.ghg.data, aes(Year, GHG.gni.ratio,
colour = category.short.names)) +
geom_line(size = 1.5) +
test.theme +
scale_color_manual(values = blog_palette, name = "GHG Type") +
scale_x_continuous(breaks = c(2000, 2004, 2008, 2012)) +
labs(title = "Irish Ratio of GHG Equivalent to GNI 2000 - 2012",
y = "Ratio of GHG Equivalent to GNI (tons per dollar)") +
theme(legend.position = "top") +
scale_y_continuous(labels = comma)
library(blorg)
library(magrittr)
library(gridExtra)
library(grid)
library(scales)
calculate_per_capita_GHGs <- function(ghg.data,
population){
# Function to calculate the ghg per capita given populationa and ghg data
ghg.data$population <- population$Population.Count
ghg.data %>%
mutate(ghg.emmissions.tons.per.capita =
(Total.emissions * 1000) / population)
}
conversion.function <- function(x){
# converts the tonnes of GHG's to tonnes of CO2 equivalents
conversion.N2O <- 298
conversion.CH4 <- 25
x[27:39, 2:23] <- x[27:39, 2:23] * conversion.N2O
x[40:52, 2:23] <- x[40:52, 2:23] * conversion.CH4
x
}
raw.ghg.data <- datakindr::get_cso_dataset("EAA01")
View(raw.ghg.data)
raw.ghg.data[1,3]
raw.ghg.data[4,3]
raw.ghg.data %>%
mutate(statistic.short =
case_when(Statistic ==  "Carbon Dioxide (CO2) Emissions (000 Tonnes)"~ "CO2",
Statistic ==  "Nitrous Oxide (N2O) Emissions (000 Tonnes)"~ "N2O",
Statistic ==  "Methane (CH4) Emissions (000 Tonnes)"~ "CH4",
Statistic ==  "All Greenhouse Gas Emissions (000 Tonnes CO2 equivalent)"~ "TOTAL"))
library(blorg)
library(dplyr)
raw.ghg.data %>%
mutate(statistic.short =
case_when(Statistic ==  "Carbon Dioxide (CO2) Emissions (000 Tonnes)"~ "CO2",
Statistic ==  "Nitrous Oxide (N2O) Emissions (000 Tonnes)"~ "N2O",
Statistic ==  "Methane (CH4) Emissions (000 Tonnes)"~ "CH4",
Statistic ==  "All Greenhouse Gas Emissions (000 Tonnes CO2 equivalent)"~ "TOTAL"))
clean.ghg.data <-
raw.ghg.data %>%
mutate(statistic.short =
case_when(Statistic ==  "Carbon Dioxide (CO2) Emissions (000 Tonnes)"~ "CO2",
Statistic ==  "Nitrous Oxide (N2O) Emissions (000 Tonnes)"~ "N2O",
Statistic ==  "Methane (CH4) Emissions (000 Tonnes)"~ "CH4",
Statistic ==  "All Greenhouse Gas Emissions (000 Tonnes CO2 equivalent)"~ "TOTAL"))
clean.ghg.data <-
raw.ghg.data %>%
mutate(statistic.short =
case_when(Statistic ==  "Carbon Dioxide (CO2) Emissions (000 Tonnes)" ~ "CO2",
Statistic ==  "Nitrous Oxide (N2O) Emissions (000 Tonnes)" ~ "N2O",
Statistic ==  "Methane (CH4) Emissions (000 Tonnes)" ~ "CH4",
Statistic ==  "All Greenhouse Gas Emissions (000 Tonnes CO2 equivalent)" ~ "TOTAL")) %>%
mutate(co2.equivalent =
case_when(statistic.short == "N2O" ~ value * 298,
statistic.short == "CH4" ~ value * 25,
TRUE ~ value))
View(clean.ghg.data)
clean.ghg.data$co2.equivalent[1:3] == clean.ghg.data$co2.equivalent[4]
sum(clean.ghg.data$co2.equivalent[1:3]) == clean.ghg.data$co2.equivalent[4]
sum(clean.ghg.data$co2.equivalent[1:3])
clean.ghg.data$co2.equivalent[4]
library(blorg)
ggplot(clean.ghg.data %>% filter(statistic.short == "TOTAL"),
aes(Year, Total.emissions,
colour = category.short.names)) +
geom_line(size = 1.5) +
blog_theme +
scale_color_manual(values = blog_palette)
library(ggplot2)
ggplot(clean.ghg.data %>% filter(statistic.short == "TOTAL"),
aes(Year, Total.emissions,
colour = category.short.names)) +
geom_line(size = 1.5) +
blog_theme +
scale_color_manual(values = blog_palette)
ggplot(clean.ghg.data %>% filter(statistic.short == "TOTAL"),
aes(Year, Statistic,
colour = category.short.names)) +
geom_line(size = 1.5) +
blog_theme +
scale_color_manual(values = blog_palette)
ggplot(clean.ghg.data %>% filter(statistic.short == "TOTAL"),
aes(Year, Statistic,
colour = statistic.short)) +
geom_line(size = 1.5) +
blog_theme +
scale_color_manual(values = blog_palette)
clean.ghg.data %>% filter(statistic.short == "TOTAL")
ggplot(clean.ghg.data %>% filter(statistic.short == "TOTAL"),
aes(Year, statistic.short,
colour = statistic.short, group=1)) +
geom_line(size = 1.5) +
blog_theme +
scale_color_manual(values = blog_palette)
clean.ghg.data %>% filter(statistic.short == "TOTAL") %>% View()
ggplot(clean.ghg.data %>% filter(statistic.short == "TOTAL",
Sector == "All Emissions"),
aes(Year, statistic.short,
colour = statistic.short, group=1)) +
geom_line(size = 1.5) +
blog_theme +
scale_color_manual(values = blog_palette)
clean.ghg.data %>% filter(statistic.short == "TOTAL",) %>% View()
clean.ghg.data %>% filter(statistic.short == "TOTAL", Sector == "All Emissions") %>% View()
ggplot(clean.ghg.data %>% filter(statistic.short == "TOTAL",
Sector == "All Emissions"),
aes(Year, value,
colour = statistic.short, group=1)) +
geom_line(size = 1.5) +
blog_theme +
scale_color_manual(values = blog_palette)
datakindr::search_statbank_datasets("greenhouse")
